#********************************************************************************
# Copyright (c) 2024 T-Systems International GmbH
# Copyright (c) 2024 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.

# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
#*******************************************************************************/

openapi: 3.0.1
info:
  title: DFT/SDE API information
  description: This Service handles all DFT data provider and consumer operations
  version: "1.0"
servers:
  - url: http://localhost:8080/api
    description: Generated server url
security:
  - bearerAuth: []
paths:
  "/policy/{uuid}":
    get:
      tags:
        - policy-controller
      operationId: getPolicy
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PolicyModel"
    put:
      tags:
        - policy-controller
      operationId: updatePolicy
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PolicyModel"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PolicyModel"
    delete:
      tags:
        - policy-controller
      operationId: deletePolicy
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/pcf/productIds/{productId}":
    get:
      tags:
        - pcf-exchange-controller
      operationId: getPcfByProduct
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: BPN
          in: query
          required: true
          schema:
            type: string
        - name: requestId
          in: query
          required: true
          schema:
            type: string
        - name: message
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
    put:
      tags:
        - pcf-exchange-controller
      operationId: uploadPcfSubmodel
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
        - name: BPN
          in: query
          required: true
          schema:
            type: string
        - name: requestId
          in: query
          required: false
          schema:
            type: string
        - name: message
          in: query
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JsonNode"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/{submodel}/upload":
    post:
      tags:
        - submodel-process-controller
      operationId: upload
      parameters:
        - name: submodel
          in: path
          required: true
          schema:
            type: string
        - name: meta_data
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/{submodel}/manualentry":
    post:
      tags:
        - submodel-process-controller
      operationId: manualentry
      parameters:
        - name: submodel
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubmodelJsonRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /upload:
    post:
      tags:
        - submodel-process-controller
      operationId: autoUpload
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /subscribe-download-data-offers:
    post:
      tags:
        - consumer-controller
      operationId: subscribeAndDownloadDataOffersSynchronous
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConsumerRequest"
        required: true
      responses:
        "200":
          description: OK
  /subscribe-download-data-offers-async:
    post:
      tags:
        - consumer-controller
      operationId: subscribeAndDownloadDataOffersAsync
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConsumerRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /subscribe-data-offers:
    post:
      tags:
        - consumer-controller
      operationId: subscribeDataOffers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConsumerRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /role:
    post:
      tags:
        - role-management-controller
      operationId: saveRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RolePojo"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/RolePojo"
  "/role/{role}/permissions":
    get:
      tags:
        - role-management-controller
      operationId: getRolePermission
      parameters:
        - name: role
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                maxItems: 100
                items:
                  type: string
    post:
      tags:
        - role-management-controller
      operationId: saveRolePermission
      parameters:
        - name: role
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              maxItems: 100
              items:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: string
  /policy:
    get:
      tags:
        - policy-controller
      operationId: getAllPolicies
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PagingResponse"
    post:
      tags:
        - policy-controller
      operationId: savePolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PolicyModel"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PolicyModel"
  /policy-hub/policy-content:
    get:
      tags:
        - policy-hub-controller
      operationId: policyContent_1
      parameters:
        - name: useCase
          in: query
          required: false
          schema:
            type: string
        - name: type
          in: query
          required: true
          schema:
            type: string
        - name: credential
          in: query
          required: true
          schema:
            type: string
        - name: operatorId
          in: query
          required: true
          schema:
            type: string
        - name: value
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/JsonNode"
    post:
      tags:
        - policy-hub-controller
      operationId: policyContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PolicyContentRequest"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/JsonNode"
  "/pcf/request/{productId}":
    post:
      tags:
        - pcf-exchange-controller
      operationId: requestForPcfDataOffer
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConsumerRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /pcf/request/nonexistdataoffer:
    post:
      tags:
        - pcf-exchange-controller
      operationId: requestForPcfNotExistDataOffer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PcfRequestModel"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /pcf/actionsonrequest:
    post:
      tags:
        - pcf-exchange-controller
      operationId: actionOnPcfRequestAndSendNotificationToConsumer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PcfRequestModel"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /offer-policy-details:
    post:
      tags:
        - consumer-controller
      operationId: getEDCPolicy
      requestBody:
        content:
          application/json:
            schema:
              type: array
              maxItems: 100
              items:
                $ref: "#/components/schemas/QueryDataOfferRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/contract-agreements/{negotiationId}/provider/decline":
    post:
      tags:
        - contract-management-controller
      operationId: declineContractProvider
      parameters:
        - name: negotiationId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  "/contract-agreements/{negotiationId}/provider/cancel":
    post:
      tags:
        - contract-management-controller
      operationId: cancelContractProvider
      parameters:
        - name: negotiationId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  "/contract-agreements/{negotiationId}/consumer/cancel":
    post:
      tags:
        - contract-management-controller
      operationId: cancelContractConsumer
      parameters:
        - name: negotiationId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /connectors-discovery:
    post:
      tags:
        - portal-proxy-controller
      operationId: fetchConnectorInfo
      requestBody:
        content:
          application/json:
            schema:
              type: array
              maxItems: 100
              items:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                maxItems: 100
                items:
                  $ref: "#/components/schemas/ConnectorInfo"
  "/{submodel}/public/{uuid}":
    get:
      tags:
        - submodel-process-controller
      operationId: readCreatedTwinsDetails
      parameters:
        - name: submodel
          in: path
          required: true
          schema:
            type: string
        - name: uuid
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: query
          required: false
          schema:
            type: string
            default: json
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  /view-download-history:
    get:
      tags:
        - consumer-controller
      operationId: viewConsumerDownloadHistory
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/view-download-history/{processId}":
    get:
      tags:
        - consumer-controller
      operationId: viewConsumerDownloadHistoryDetails
      parameters:
        - name: processId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /user/role/permissions:
    get:
      tags:
        - role-management-controller
      operationId: getAllRolePermissions
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                maxItems: 100
                items:
                  type: string
  /usecases:
    get:
      tags:
        - submodel-controller
      operationId: getAllUsecases
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                maxItems: 100
                items:
                  type: object
                  additionalProperties:
                    type: object
  "/unified-bpn-validation/{bpn}":
    get:
      tags:
        - portal-proxy-controller
      operationId: unifiedBpnValidation
      parameters:
        - name: bpn
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/UnifiedBpnValidationResponse"
  /submodels:
    get:
      tags:
        - submodel-controller
      operationId: getAllSubmodels
      parameters:
        - name: usecases
          in: query
          required: false
          schema:
            type: array
            maxItems: 100
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                maxItems: 100
                items:
                  type: object
                  additionalProperties:
                    type: string
  "/submodels/{submodelName}":
    get:
      tags:
        - submodel-controller
      operationId: getSubmodelByName
      parameters:
        - name: submodelName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  /submodels/schema-details:
    get:
      tags:
        - submodel-controller
      operationId: getAllSubmodelswithDetails
      parameters:
        - name: usecases
          in: query
          required: false
          schema:
            type: array
            maxItems: 100
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                maxItems: 100
                items:
                  type: object
                  additionalProperties:
                    type: object
  /query-data-offers:
    get:
      tags:
        - consumer-controller
      operationId: queryOnDataOffers
      parameters:
        - name: manufacturerPartId
          in: query
          required: false
          schema:
            type: string
        - name: bpnNumber
          in: query
          required: false
          schema:
            type: string
        - name: submodel
          in: query
          required: false
          schema:
            type: string
        - name: maxLimit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /processing-report:
    get:
      tags:
        - process-report-controller
      operationId: getProcessingReportsByDateDesc
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcessReportPageResponse"
  "/processing-report/{submodel}/success-details/{id}":
    get:
      tags:
        - process-report-controller
      operationId: getProcessSuccessDetailsReportById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: submodel
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                maxItems: 100
                items:
                  type: array
                  maxItems: 100
                  items:
                    type: string
  "/processing-report/{id}":
    get:
      tags:
        - process-report-controller
      operationId: getProcessReportById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcessReport"
  "/processing-report/failure-details/{id}":
    get:
      tags:
        - process-report-controller
      operationId: getProcessFailureDetailsReportById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                maxItems: 100
                items:
                  $ref: "#/components/schemas/ProcessFailureDetails"
  /policy/is-policy-name-valid:
    get:
      tags:
        - policy-controller
      operationId: isPolicyNameValid
      parameters:
        - name: policyName
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: boolean
  /policy-hub/policy-types:
    get:
      tags:
        - policy-hub-controller
      operationId: policyTypes
      parameters:
        - name: type
          in: query
          required: false
          schema:
            type: string
        - name: useCase
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                maxItems: 100
                items:
                  $ref: "#/components/schemas/PolicyTypeResponse"
  /policy-hub/policy-attributes:
    get:
      tags:
        - policy-hub-controller
      operationId: policyAttributes
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                maxItems: 100
                items:
                  type: string
  /ping:
    get:
      tags:
        - ping-controller
      operationId: getProcessReportById_1
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: string
  "/pcf/{type}/requests":
    get:
      tags:
        - pcf-exchange-controller
      operationId: getPcfProviderData
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum:
              - CONSUMER
              - PROVIDER
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - REQUESTED
              - APPROVED
              - PUSHING_DATA
              - PUSHING_UPDATED_DATA
              - REJECTED
              - SENDING_REJECT_NOTIFICATION
              - PUSHED
              - PUSHED_UPDATED_DATA
              - RECEIVED
              - FAILED_TO_PUSH_DATA
              - FAILED_TO_SEND_REJECT_NOTIFICATION
              - FAILED
              - SENDING_REQUEST
              - PENDING_DATA_FROM_PROVIDER
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/pcf/request/{requestId}":
    get:
      tags:
        - pcf-exchange-controller
      operationId: viewForPcfDataOffer
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /legal-entities:
    get:
      tags:
        - portal-proxy-controller
      operationId: fetchLegalEntitiesData
      parameters:
        - name: searchText
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                maxItems: 100
                items:
                  $ref: "#/components/schemas/LegalEntityResponse"
  /download-data-offers:
    get:
      tags:
        - consumer-controller
      operationId: downloadFileFromEDCUsingifAlreadyTransferStatusCompleted
      parameters:
        - name: processId
          in: query
          required: true
          schema:
            type: string
        - name: type
          in: query
          required: false
          schema:
            type: string
            default: csv
      responses:
        "200":
          description: OK
  "/contract-agreements/{negotiationId}/consumer/decline":
    get:
      tags:
        - contract-management-controller
      operationId: declineContractConsumer
      parameters:
        - name: negotiationId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /contract-agreements/provider:
    get:
      tags:
        - contract-management-controller
      operationId: contractAgreementsProvider
      parameters:
        - name: maxLimit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /contract-agreements/consumer:
    get:
      tags:
        - contract-management-controller
      operationId: contractAgreementsConsumer
      parameters:
        - name: maxLimit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /cache/clear-memebercompany-bpnnumber:
    get:
      tags:
        - ping-controller
      operationId: clearBpnnumberCache
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: string
  /cache/clear-ddtrurl:
    get:
      tags:
        - ping-controller
      operationId: clearDdtrurlCache
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: string
  "/{submodel}/delete/{processId}":
    delete:
      tags:
        - submodel-process-controller
      operationId: deleteRecordsWithDigitalTwinAndEDC
      parameters:
        - name: processId
          in: path
          required: true
          schema:
            type: string
        - name: submodel
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  "/role/{role}":
    delete:
      tags:
        - role-management-controller
      operationId: deleteRole
      parameters:
        - name: role
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
components:
  schemas:
    Policies:
      type: object
      properties:
        technicalKey:
          type: string
        value:
          type: array
          maxItems: 100
          items:
            type: string
    PolicyModel:
      type: object
      properties:
        uuid:
          type: string
        lastUpdatedTime:
          type: string
          format: date-time
        policy_name:
          type: string
        Access:
          type: array
          maxItems: 100
          items:
            $ref: "#/components/schemas/Policies"
        Usage:
          type: array
          maxItems: 100
          items:
            $ref: "#/components/schemas/Policies"
    JsonNode:
      type: object
    SubmodelJsonRequest:
      required:
        - row_data
      type: object
      properties:
        uuid:
          type: string
        lastUpdatedTime:
          type: string
          format: date-time
        type:
          type: string
          enum:
            - NONE
            - EXISTING
            - NEW
        policy_name:
          type: string
        Access:
          type: array
          maxItems: 100
          items:
            $ref: "#/components/schemas/Policies"
        Usage:
          type: array
          maxItems: 100
          items:
            $ref: "#/components/schemas/Policies"
        row_data:
          type: array
          maxItems: 100
          items:
            type: object
    ConsumerRequest:
      required:
        - offers
        - usage_policies
      type: object
      properties:
        offers:
          type: array
          maxItems: 100
          items:
            $ref: "#/components/schemas/Offer"
        downloadDataAs:
          type: string
        usage_policies:
          type: array
          maxItems: 100
          items:
            $ref: "#/components/schemas/Policies"
    Offer:
      required:
        - assetId
        - connectorId
        - connectorOfferUrl
        - offerId
      type: object
      properties:
        connectorId:
          type: string
        connectorOfferUrl:
          type: string
        offerId:
          type: string
        assetId:
          type: string
        policyId:
          type: string
        agreementId:
          type: string
        expirationDate:
          type: string
        transferProcessId:
          type: string
        status:
          type: string
        downloadErrorMsg:
          type: string
    RolePojo:
      type: object
      properties:
        role:
          type: string
        description:
          type: string
    Constraint:
      type: object
      properties:
        key:
          type: string
        operator:
          type: string
          enum:
            - EQUALS
            - IN
        value:
          type: string
    PolicyContentRequest:
      type: object
      properties:
        policyType:
          type: string
          enum:
            - ACCESS
            - USAGE
            - PURPOSE
        constraintOperand:
          type: string
          enum:
            - AND
            - OR
        constraints:
          type: array
          maxItems: 100
          items:
            $ref: "#/components/schemas/Constraint"
    PcfRequestModel:
      required:
        - bpnNumber
        - productId
      type: object
      properties:
        requestId:
          type: string
        productId:
          type: string
        bpnNumber:
          type: string
        type:
          type: string
          enum:
            - CONSUMER
            - PROVIDER
        message:
          type: string
        remark:
          type: string
        status:
          type: string
          enum:
            - REQUESTED
            - APPROVED
            - PUSHING_DATA
            - PUSHING_UPDATED_DATA
            - REJECTED
            - SENDING_REJECT_NOTIFICATION
            - PUSHED
            - PUSHED_UPDATED_DATA
            - RECEIVED
            - FAILED_TO_PUSH_DATA
            - FAILED_TO_SEND_REJECT_NOTIFICATION
            - FAILED
            - SENDING_REQUEST
            - PENDING_DATA_FROM_PROVIDER
        requestedTime:
          type: integer
          format: int64
        lastUpdatedTime:
          type: integer
          format: int64
    QueryDataOfferRequest:
      type: object
      properties:
        assetId:
          type: string
        connectorOfferUrl:
          type: string
        policy:
          $ref: "#/components/schemas/PolicyModel"
    ConnectorInfo:
      type: object
      properties:
        bpn:
          type: string
        connectorEndpoint:
          type: array
          maxItems: 100
          items:
            type: string
    UnifiedBpnValidationResponse:
      type: object
      properties:
        msg:
          type: string
        bpnStatus:
          type: string
          enum:
            - FULL_PARTNER
            - NOT_PARTNER
            - PARTNER
    ProcessReport:
      type: object
      properties:
        processId:
          type: string
        csvType:
          type: string
        numberOfItems:
          type: integer
          format: int32
        numberOfFailedItems:
          type: integer
          format: int32
        numberOfSucceededItems:
          type: integer
          format: int32
        status:
          type: string
          enum:
            - IN_PROGRESS
            - COMPLETED
            - FAILED
            - PARTIALLY_FAILED
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        policyUuid:
          type: string
        accessPolicies:
          type: array
          maxItems: 100
          items:
            $ref: "#/components/schemas/Policies"
        usagePolicies:
          type: array
          maxItems: 100
          items:
            $ref: "#/components/schemas/Policies"
        numberOfUpdatedItems:
          type: integer
          format: int32
        numberOfDeletedItems:
          type: integer
          format: int32
        referenceProcessId:
          type: string
    ProcessReportPageResponse:
      type: object
      properties:
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalItems:
          type: integer
          format: int64
        items:
          type: array
          maxItems: 100
          items:
            $ref: "#/components/schemas/ProcessReport"
    ProcessFailureDetails:
      type: object
      properties:
        uuid:
          type: string
        processId:
          type: string
        log:
          type: string
        dateTime:
          type: string
          format: date-time
    PagingResponse:
      type: object
      properties:
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalItems:
          type: integer
          format: int64
        items:
          type: object
    PolicyAttributeResponse:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    PolicyTypeResponse:
      type: object
      properties:
        technicalKey:
          type: string
        type:
          type: array
          maxItems: 100
          items:
            type: string
        description:
          type: string
        useCase:
          type: array
          maxItems: 100
          items:
            type: string
        attribute:
          type: array
          maxItems: 100
          items:
            $ref: "#/components/schemas/PolicyAttributeResponse"
        technicalEnforced:
          type: boolean
    LegalEntityResponse:
      type: object
      properties:
        name:
          type: string
        bpn:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
