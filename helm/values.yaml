# Default values for helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/catenax-ng/product-dft-backend-mod
  pullPolicy: Always
  tag: "latest"

imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: true

probe:
  endpoint: "/api/ping"
    
service:
  type: ClusterIP
  port: 8080



autoscaling:
  enabled: false

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: DoesNotExist
          topologyKey: kubernetes.io/hostname

livenessProbe:
  failureThreshold: 3
  initialDelaySeconds: 60
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
readinessProbe:
  failureThreshold: 3
  initialDelaySeconds: 60
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1

ingress:
  enabled: true
  host: dft-api.pen.int.demo.catena-x.net
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
    nginx.ingress.kubernetes.io/enable-cors: 'false'

 
postgres:
  enabled: true
  auth:
    username: "dftUser"
    database: "dftdb"
    existingSecret: dft-postgresql-secrets
    secretKeys:
        adminPasswordKey: "postgres-password"
        userPasswordKey: "password"
